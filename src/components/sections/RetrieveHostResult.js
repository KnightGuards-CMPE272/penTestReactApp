import React, { useEffect, useState} from 'react';
import Spinner from '../elements/Spinner'
import ScanResultTable from './ScanResultTable';
//import { defaultScanResults } from '../../data/scanResults'

import HostScanHeader from './HostScanHeader';
import ScanSummary from './ScanSummary';
import RPCResultTable from './RPCResultTable';
import ZapScanResultTable from './ZapScanResultTable';

  //For testing when service is not running
  //let items = defaultScanResults


  const ScanHostResults = ({
    className,
    id
  }) => {

    const [hostScanResult, setHostScanResult] = useState([]);
    const [loading, setLoading] = useState([true]);
    
    const loadData = async () => {
        setLoading(true)
        const res = await fetch("http://localhost:5000/scanresult/"+id);
        setHostScanResult(await res.json());
        setLoading(false)
      };

    useEffect(() => {
        loadData();
        return () => {};
      }, // eslint-disable-next-line react-hooks/exhaustive-deps 
      []);

     return (
        <div>
          <div className="tables">
          {loading ?<><HostScanHeader split hostName="192.168.0.106"/><Spinner /></> : 
         <>
            <ScanSummary hostName={hostScanResult.hostname} portsOpen={hostScanResult.scannedResult.length} retrieve scannedDate={hostScanResult.scannedDate}/>
            <ScanResultTable scannedPorts={hostScanResult.scannedResult} />
            <RPCResultTable rpcServices={hostScanResult.rpcInfo}/>
            <ZapScanResultTable zapInfo={hostScanResult.zapInfo}/>
         </> }
          </div>
        </div>
      );
    }

export default ScanHostResults