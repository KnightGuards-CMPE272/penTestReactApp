import React, { useEffect, useState} from 'react';
import classNames from 'classnames';
import { SectionTilesProps } from '../../utils/SectionProps';
import SectionHeader from './partials/SectionHeader';
import axios from 'axios';
//import { defaultScanResults } from '../../data/scanResults'


const propTypes = {
  ...SectionTilesProps.types
}

const defaultProps = {
  ...SectionTilesProps.defaults
}

//let items = defaultScanResults

const RecentScan = ({
  className,
  topOuterDivider,
  bottomOuterDivider,
  topDivider,
  bottomDivider,
  hasBgColor,
  invertColor,
  pushLeft,
  scanAll,
  ...props
}) => {

  const outerClasses = classNames(
    'testimonial section',
    topOuterDivider && 'has-top-divider',
    bottomOuterDivider && 'has-bottom-divider',
    hasBgColor && 'has-bg-color',
    invertColor && 'invert-color',
    className
  );

  const innerClasses = classNames(
    'scanresult-inner section-inner',
    topDivider && 'has-top-divider',
    bottomDivider && 'has-bottom-divider'
  );

  const tilesClasses = classNames(
    'tiles-wrap',
    pushLeft && 'push-left'
  );

  const sectionHeader = {
    title: scanAll?'All past scan results':'Recent Scan Results',
    paragraph: 'Summary for previously scanned results. Information of previous scans will be deleted after 30 days.'
  };


  const [scanResult, setScanResult] = useState([]);



useEffect(()=>{
    //setScanResult(items);
    const limit = scanAll?"21":"3";

    axios.get('http://localhost:5000/scannedresults/'+limit)
      .then(res=>{
        //const jsonResult = JSON.parse(res.data)
        console.log(res.data);
        setScanResult(res.data)
      })
      .catch(err=>{
        console.log(err);
      })
// eslint-disable-next-line react-hooks/exhaustive-deps
 },[])
  
  const scanResults=scanResult.map((scanResultItem,id)=>{
    return <div key={id} className="tiles-item">
    <div className="tiles-item-inner">
      <div className="item-content">
        <p className="text-sm mb-0">
        Host: {scanResultItem.hostname} <br></br>
        Ports Open: {scanResultItem.scannedResult.length}  <br></br>
        Vulnerability: {scanResultItem.scannedResult.length < 10?"Secure":"Vulnerable"}  <br/>
        Date Scanned: {scanResultItem.scannedDate} <br/>
      </p>
      </div>
      <div className="scanresult-item-footer text-xs mt-32 mb-0 has-top-divider">
        <span className="scanresult-item-name text-color-high">Status: {scanResultItem.scannedResult.length < 10?<span className='goodScore'>Good</span>:<span  className='badScore'>Bad</span>}</span>
        <span className="text-color-low"> / </span>
        <span className="scanresult-item-link">
          <a href={`/scan/result/${scanResultItem._id.$oid}`}>Details</a>
        </span>
      </div>
    </div>
  </div>
  })

  return (
    <section
      {...props}
      className={outerClasses}
    >
      <div className="container">
        <div className={innerClasses}>
          <SectionHeader data={sectionHeader} className="center-content" />
          <div className={tilesClasses}>
            {scanResults}
          </div>
        </div>
      </div>
    </section>
  );
}

RecentScan.propTypes = propTypes;
RecentScan.defaultProps = defaultProps;

export default RecentScan;